#!/bin/sh
# ripe-dbase	This shell script takes care of starting and stopping
#
# chkconfig:    345 90 25
#
# description:  The server software of the RIPE Whois Server, also known \
#		as the RPSL Implementation Project (RIP).
#
# pidfile:      /var/run/ripe-dbase.pid


# ¦mieci
#BASEDIR=/home/tiago/k/whois
#MYSQLLIBDIR=/usr/local/mysql/lib/mysql
#GLIBCONFIG=/usr/local/bin/glib-config
#GLIB=`${GLIBCONFIG} --prefix`/lib
#LD_LIBRARY_PATH=$MYSQLLIBDIR:$GLIB; export LD_LIBRARY_PATH
########################
#PATH=/sbin:/usr/sbin:/bin:/usr/bin
#export PATH



# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

##############################
# Default entries:
CONFIG=rip.config.sample
NOTIFY=root@localhost
CRASHES=10
pid_file=/var/run/ripe-dbase.pid

##############################

# Get service config
[ -f /etc/sysconfig/ripe-dbase ] && . /etc/sysconfig/ripe-dbase

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status -a "$1" != init ]; then
		msg_network_down ripe-dbase
		exit 1
	fi
else
	exit 0
fi

# Safeguard (relative paths, core dumps..)
#cd $BASEDIR

# Sanity check
[ -f /etc/ripe-dbase/${CONFIG} ] || exit 0

RETVAL=0
# See how we were called.
case "$1" in
  start)
   	# Start server
	if [ ! -f /var/lock/subsys/ripe-dbase ]; then
		msg_starting ripe-dbase
		daemon $SERVICE_RUN_NICE_LEVEL /usr/bin/whoisd_start --config=${CONFIG} --pid-file=${pid_file} --basedir=/usr --crashes=${CRASHES} --notify=${NOTIFY} --library_path=''
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/ripe-dbase
	else
		msg_already_running ripe-dbase
	fi
	;;

  'stop')
	if [ -f /var/lock/subsys/ripe-dbase ]; then
		# Stop server using SIGTERM signal
		msg_stopping ripe-dbase
		if [ -f "$pid_file" ]; then
			PID="`cat $pid_file`"
			if [ -z "$PID" ]; then
				PID=0
			fi
		else
			PID=0
		fi
		killproc ripe-dbase
		RETVAL=$?
		if [ ! $PID -eq 0 ]; then
			show "Waiting for ripe-dbase to stop"
			busy
			while [ -s $pid_file -a "$flags" != aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ]; do
				[ -z "$flags" ] && echo ".\c"
				flags=a$flags
				sleep 1
			done
			ok
		fi
		if [ -s $pid_file ]; then
			show "gave up waiting!"
		elif [ -n "$flags" ]; then
			echo " done"
		fi
	else
		msg_not_running ripe-dbase
	fi
	;;
  restart)
  	$0 stop
	$0 start
	exit $?
	;;
  reload|force-reload)
  	if [ -f /var/lock/subsys/ripe-dbase ]; then
		msg_reloading ripe-dbase
		killproc ripe-dbase -HUP
		RETVAL=$?
	else
		msg_not_running ripe-dbase
		exit 7
	fi
	;;
  status)
  	status ripe-dbase
	exit $?
	;;
  *)
  	msg_usage "$0 {start|stop|init|restart|reload|force-reload|status}"
	exit 3
esac

exit $RETVAL
